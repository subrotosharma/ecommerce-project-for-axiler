name: Multi-Environment Deployment

on:
  push:
    branches: [main, staging, prod]
  pull_request:
    branches: [main, staging, prod]

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
    steps:
    - name: Determine Environment
      id: env
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "environment=dev" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
          echo "environment=staging" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/prod" ]]; then
          echo "environment=prod" >> $GITHUB_OUTPUT
        else
          echo "environment=dev" >> $GITHUB_OUTPUT
        fi

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'

  deploy:
    runs-on: ubuntu-latest
    needs: [determine-environment, security-scan]
    environment: ${{ needs.determine-environment.outputs.environment }}
    steps:
    - uses: actions/checkout@v4
    - name: Deploy to Environment
      run: |
        ENV=${{ needs.determine-environment.outputs.environment }}
        echo "ðŸš€ Deploying to $ENV environment"
        echo "ðŸ“Š Environment Configuration:"
        echo "   - Environment: $ENV"
        echo "   - Replicas: $([ "$ENV" = "prod" ] && echo "5" || [ "$ENV" = "staging" ] && echo "3" || echo "2")"
        echo "   - Domain: $([ "$ENV" = "prod" ] && echo "ecommerce.subrotosharma.site" || [ "$ENV" = "staging" ] && echo "staging.subrotosharma.site" || echo "axiler.subrotosharma.site")"
        echo "âœ… Deployment completed successfully"